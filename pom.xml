<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!-- 项目信息 -->
    <groupId>com.xingeyes.boot</groupId>
    <artifactId>xingeyes-boot</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>Xing Eyes Framework</name>
    <description>Xing Eyes Framework Family</description>

    <!-- 开发组织及成员信息 -->
    <organization>
        <name>XEyes.io</name>
        <url>https://xeyes.io</url>
    </organization>
    <developers>
        <developer>
            <id>Xeyes_Admin</id>
            <name>行走的code</name>
            <email>xeyes@xing-eyes.com</email>
            <url>https://xeyes.io</url>
        </developer>
    </developers>

    <!-- 统一模块管理 -->
    <modules>
        <module>xingeyes-boot-conf</module>
        <module>xingeyes-boot-core</module>
        <module>xingeyes-boot-persist</module>
        <module>xingeyes-boot-service</module>
        <module>xingeyes-boot-web</module>
        <module>xingeyes-boot-runtime</module>
        <module>xingeyes-boot-utils</module>
        <module>xingeyes-boot-container</module>
        <module>xingeyes-boot-cloud</module>
        <module>xingeyes-boot-bigdata</module>
        <module>xingeyes-boot-admin</module>
        <module>xingeyes-boot-scripts</module>
        <module>xingeyes-boot-security</module>
        <module>xingeyes-boot-api</module>
    </modules>

    <!-- 全局统一三方依赖版本管理 -->
    <properties>
        <java.version>1.8</java.version>
        <spring-boot.version>2.2.4.RELEASE</spring-boot.version>
        <spring.version>5.2.4.RELEASE</spring.version>
        <jackson.version>2.12.7.1</jackson.version>
        <slf4j.version>1.7.25</slf4j.version>
        <logback.version>1.2.3</logback.version>
        <fastjson.version>1.2.61</fastjson.version>
        <mysql.jdbc.version>8.0.19</mysql.jdbc.version>
        <mybatis.version>2.1.1</mybatis.version>
        <kafka.version>2.4.0</kafka.version>
        <spring.kafka.version>2.4.0.RELEASE</spring.kafka.version>
        <druid-springboot.version>1.1.10</druid-springboot.version>
        <junit.version>4.12</junit.version>
        <nacos-config.version>0.2.4</nacos-config.version>
        <dubbo.version>2.7.5</dubbo.version>
        <nacos.version>1.1.4</nacos.version>
        <zookeeper.version>3.5.7</zookeeper.version>
        <shiro-spring.version>1.4.0</shiro-spring.version>
        <swagger2.version>2.9.2</swagger2.version>
        <spring.oauth2.version>2.4.0.RELEASE</spring.oauth2.version>
        <lombok.version>1.18.10</lombok.version>
        <commons-pool2.version>2.7.0</commons-pool2.version>
        <commons-configuration2.version>2.3</commons-configuration2.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <commons-lang3.version>3.9</commons-lang3.version>
        <druid.version>1.1.21</druid.version>
        <junit.version>4.13</junit.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!-- 全局统一版本依赖声明 -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.xingeyes.boot</groupId>
                <artifactId>xingeyes-boot-conf</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xingeyes.boot</groupId>
                <artifactId>xingeyes-boot-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xingeyes.boot</groupId>
                <artifactId>xingeyes-boot-persist</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xingeyes.boot</groupId>
                <artifactId>xingeyes-boot-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xingeyes.boot</groupId>
                <artifactId>xingeyes-boot-web</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xingeyes.boot</groupId>
                <artifactId>xingeyes-boot-utils</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xingeyes.boot</groupId>
                <artifactId>xingeyes-boot-runtime</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xingeyes.boot</groupId>
                <artifactId>xingeyes-boot-cloud</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xingeyes.boot</groupId>
                <artifactId>xingeyes-boot-container</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xingeyes.boot</groupId>
                <artifactId>xingeyes-boot-bigdata</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xingeyes.boot</groupId>
                <artifactId>xingeyes-boot-admin</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xingeyes.boot</groupId>
                <artifactId>xingeyes-boot-scripts</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xingeyes.boot</groupId>
                <artifactId>xingeyes-boot-security</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xingeyes.boot</groupId>
                <artifactId>xingeyes-boot-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- Spring-Boot-Starter 依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-websocket</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-amqp</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-mongodb</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-rest</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-solr</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-freemarker</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-quartz</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <!-- Maven 项目 安全相关工具包依赖 -->
            <dependency>
                <groupId>org.springframework.security.oauth</groupId>
                <artifactId>spring-security-oauth2</artifactId>
                <version>${spring.oauth2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security.oauth.boot</groupId>
                <artifactId>spring-security-oauth2-autoconfigure</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-oauth2-client</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-cache</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <!-- Spring-Boot 整合Junit框架依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.junit.vintage</groupId>
                        <artifactId>junit-vintage-engine</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>{junit.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- SpringBoot JDBC/JPA/MySQL/MyBatis 数据访问包依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jdbc</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jdbc</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.jdbc.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid-springboot.version}</version>
            </dependency>

            <!-- Jackson Json 转换工具包依赖 -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <!-- Kafka 工具包依赖 -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_2.13</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>connect-api</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-streams</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${spring.kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka-test</artifactId>
                <version>${spring.kafka.version}</version>
            </dependency>

            <!-- Alibaba 相关代码库源依赖 -->
            <dependency>
                <groupId>com.alibaba.boot</groupId>
                <artifactId>nacos-config-spring-boot-starter</artifactId>
                <version>${nacos-config.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.boot</groupId>
                <artifactId>nacos-config-spring-boot-autoconfigure</artifactId>
                <version>${nacos-config.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.nacos</groupId>
                <artifactId>nacos-client</artifactId>
                <version>${nacos.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- Dubbo 集成Spring-Boot 相关依赖 -->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${dubbo.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo</artifactId>
                <version>${dubbo.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
            </dependency>

            <!-- Apache Shiro 依赖 -->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring</artifactId>
                <version>${shiro-spring.version}</version>
            </dependency>
            <!-- Swagger 2 依赖 -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger2.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger2.version}</version>
                <scope>compile</scope>
            </dependency>
            <!-- 全局JUnit单元测试 -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- LOG 依赖： slf4 and logback-->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <!-- LOG 依赖结束-->
            <!-- 代码便捷工具类依赖 -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- Google 工具包依赖（to be added） -->

            <!-- Apache Common 工具包合集依赖 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-configuration2</artifactId>
                <version>${commons-configuration2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${commons-pool2.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 全局公共依赖 -->
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- 代码便捷工具类依赖 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- LOG 依赖： slf4 and logback-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <!-- LOG 依赖结束-->
    </dependencies>

    <!-- 软件仓库信息
    <repositories></repositories>
    -->

    <scm>
        <connection>scm:git@github.com:wyfish/xeyes.git</connection>
        <developerConnection>scm:git@github.com:wyfish/xeyes.git</developerConnection>
        <url>git@github.com:wyfish/xeyes.git</url>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>Github Issue</system>
        <url>https://github.com/wyfish/xeyes/issues</url>
    </issueManagement>

    <!-- 编译、安装、部署等信息  -->
    <build>
        <plugins>
            <!--编译源文件及测试源文件插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>1.8</source>  <!--源代码jdk编译版本-->
                    <target>1.8</target>  <!--目标平台jdk编译版本-->
                    <encoding>UTF-8</encoding>  <!-- 指定编码格式，因为系统默认使用GBK编码 -->
                </configuration>
            </plugin>
            <!-- 发布源文件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
            </plugin>
            <!--处理源资源文件及测试资源文件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <!--设置占位符-->
                <configuration>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                    <delimiters>
                        <delimiter>$[*]</delimiter>
                    </delimiters>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!-- 执行相应测试代码规则 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.21.0</version>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>1.3.2</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <skip>false</skip>
                    <testFailureIgnore>false</testFailureIgnore>
                    <argLine>-Dfile.encoding=UTF-8</argLine>
                </configuration>
            </plugin>
            <!-- 代码审核 -->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.3.0.603</version>
            </plugin>
        </plugins>

        <resources></resources>
        <testResources></testResources>
    </build>

    <!-- 部署管理
    <distributionManagement>
        <repository></repository>
        <snapshotRepository></snapshotRepository>
    </distributionManagement>
    -->
</project>
